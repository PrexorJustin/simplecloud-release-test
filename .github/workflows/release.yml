name: Create Release with ShadowJars

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel'
        required: true
        default: 'snapshot'
        type: choice
        options:
          - snapshot
          - rc
          - release

jobs:
  build:
    name: Build ShadowJars and Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop  # Ensure you build from the develop branch

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Determine Version and Channel
        id: version
        run: |
          # Get channel from workflow input
          CHANNEL="${{ github.event.inputs.channel }}"
          echo "Selected channel: $CHANNEL"
          
          # Read the base version from gradle.properties (should be "0.0.1")
          BASE_VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          echo "Base version: $BASE_VERSION"
          
          # Get current commit hash (short)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          
          # Compute final version based on channel
          if [ "$CHANNEL" = "release" ]; then
            FINAL_VERSION="$BASE_VERSION"
          elif [ "$CHANNEL" = "rc" ]; then
            FINAL_VERSION="${BASE_VERSION}-rc.${COMMIT_HASH}"
          else
            FINAL_VERSION="${BASE_VERSION}-SNAPSHOT.${COMMIT_HASH}"
          fi
          echo "Computed final version: $FINAL_VERSION"
          
          # Export variables for later steps
          echo "CHANNEL=$CHANNEL" >> $GITHUB_ENV
          echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
          echo "final_version=$FINAL_VERSION" >> $GITHUB_OUTPUT
          echo "channel=$CHANNEL" >> $GITHUB_OUTPUT

      - name: Build ShadowJars
        run: |
          ./gradlew clean build shadowJar -PreleaseType=${{ env.CHANNEL }} -Pversion=${{ env.FINAL_VERSION }}
        env:
          COMMIT_HASH: ${{ env.COMMIT_HASH }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.FINAL_VERSION }}
          release_name: v${{ env.FINAL_VERSION }}
          draft: false
          prerelease: ${{ env.CHANNEL != 'release' }}
          commitish: develop
          body: |
            This release (channel: ${{ env.CHANNEL }}) contains dev builds for all Gradle modules.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ShadowJars to Release
        run: |
          # Only upload jar files whose names do NOT contain the base version (e.g., "0.0.1")
          echo "Uploading fat jar artifacts (files without '$BASE_VERSION' in the name):"
          for jar in $(find . -type f -name "*.jar" -path "*/build/libs/*.jar" -not -path "./build/libs/*"); do
            FILENAME=$(basename "$jar")
            if [[ "$FILENAME" == *"$BASE_VERSION"* ]]; then
              echo "Skipping $jar (contains base version)"
            else
              echo "Uploading $jar"
              gh release upload v${{ env.FINAL_VERSION }} "$jar"
            fi
          done
        env:
          BASE_VERSION: ${{ env.BASE_VERSION }}
          FINAL_VERSION: ${{ env.FINAL_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
